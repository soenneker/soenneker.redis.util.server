name: publish-package
on:
  push:
    branches:
      - main

    tags:
      - v*

env:
    "PipelineEnvironment": true

jobs:
  publish-package:
    runs-on: ubuntu-latest

    services:
     redis: 
       image: redis
       # Set health checks to wait until redis has started
       options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
       ports:
         - 6379:6379
    steps:
      - uses: actions/checkout@v4
      
      - name: Setting up build version
        run: |
          version=$(($GITHUB_RUN_NUMBER))
          echo "BUILD_VERSION=3.0.$version" >> ${GITHUB_ENV}

      - name: Setup .NET Core 8.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Install dependencies with retry
        run: |
          retries=5
          base_wait_time=15
          exponent=2

          for i in $(seq 1 $retries); do
            if dotnet restore; then
              break
            fi

            if [ $i -lt $retries ]; then
              wait_time=$(awk "BEGIN {print int($base_wait_time * ($exponent ^ ($i - 1)))}")
              echo "dotnet restore failed, retrying in $wait_time seconds..."
              sleep $wait_time
            else
              echo "dotnet restore failed after $retries retries."
              exit 1
            fi
          done

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test test/Soenneker.Redis.Util.Server.Tests/Soenneker.Redis.Util.Server.Tests.csproj --no-restore --verbosity normal

      - name: Pack
        run: dotnet pack --no-build --configuration Release --output .

      - name: Publish to NuGet with retry
        run: |
          nupkg_files=$(find . -name "*.nupkg")
          retries=5
          base_wait_time=20 
          exponent=3.5
          
          for i in $(seq 1 $retries); do
            if dotnet nuget push $nupkg_files --source 'https://api.nuget.org/v3/index.json' --api-key ${{secrets.NUGET_TOKEN}} --skip-duplicate; then
              break
            fi
            
            if [ $i -lt $retries ]; then
              wait_time=$(awk "BEGIN {print int($base_wait_time * ($exponent ^ ($i - 1)))}")
              echo "NuGet publish failed, retrying in $wait_time seconds..."
              sleep $wait_time
            else
              echo "NuGet publish failed after $retries retries."
              exit 1
            fi
          done
